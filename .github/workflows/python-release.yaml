name: ðŸš€ Release Python package with Calendar Versioning
on:
  workflow_call:
    inputs:
      runs_on:
        description: The runner to use for the job
        default: "self-hosted"
        required: false
        type: string
      relative_dir:
        description: Relative directory to package
        type: string
        required: false
        default: "."
      prerelease:
        description: Whether the release is a pre-release
        type: boolean
        required: false
        default: true
      publish:
        description: Whether to publish the package to the registry
        type: boolean
        required: false
        default: false

jobs:
  release:
    runs-on: ${{ inputs.runs_on }}
    environment: pypi
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Delete trigger tag
        if: ${{ github.ref_type == 'tag' }}
        run: git push --delete origin ${{ github.event.ref }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.6"

      - name: Calendar Versioning (PEP 440 Compatible)
        id: calver
        uses: alepee/calendar-version-action@v1
        with:
          dateFormat: "YYYY0M.DD"
          format: "%NOW%.${{ inputs.prerelease && '0rc' || '' }}%MICRO%"

      - name: Git tag
        run: git tag ${{ steps.calver.outputs.version }}

      - name: Build package
        working-directory: ${{ inputs.relative_dir }}
        run: uv build

      - name: Publish package to registry
        if: ${{ inputs.publish == true }}
        working-directory: ${{ inputs.relative_dir }}
        run: uv publish --token ${{ secrets.PYPI_TOKEN }}

      - name: Make GitHub release
        uses: softprops/action-gh-release@v2.1.0
        if: ${{ inputs.publish == true }}
        with:
          body: "**Source commit**: https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
          tag_name: ${{ steps.calver.outputs.version }}
          target_commitish: ${{ github.sha }}
          generate_release_notes: true
          prerelease: ${{ inputs.prerelease }}
